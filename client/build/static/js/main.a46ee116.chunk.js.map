{"version":3,"sources":["Navbar.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","navlinks","marginLeft","spacing","display","logo","flexGrow","cursor","link","textDecoration","color","fontSize","&:hover","borderBottom","Navbar","classes","react_default","a","createElement","AppBar","position","top","CssBaseline","Toolbar","Typography","variant","className","Item","styled","Paper","_ref","Object","objectSpread","typography","body2","padding","textAlign","palette","text","secondary","App","state","name","testeeName","testName","attempts","score","sten","percentile","date_taken","candidates","loading","searchField","testeeRecords","fileName","hoveringOver","table","minWidth","handleChange","_ref2","_ref2$target","target","value","_this","setState","defineProperty","createAndDownloadPdf","axios","post","then","get","responseType","res","pdfBlob","Blob","data","type","console","log","saveAs","fetch","response","json","this","row","forEach","candidate","candidate_id","push","_this2","style","left","transform","Stack","sx","direction","CircularProgress","length","react_router_dom","src_Navbar","fixed","sticky","stlye","Accordion","width","AccordionSummary","expandIcon","ExpandMore_default","aria-controls","fontWeight","AccordionDetails","align","href","dist_default","icons","Check","DetailPanel","ChevronRight","Delete","DeleteOutline","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","Search","ThirdStateCheck","Remove","Add","SortArrow","ArrowDownward","Clear","Edit","ViewColumn","ResetSearch","title","columns","field","hover","render","rowData","GetApp_default","tooltip","onClick","clickMe","bind","id","key","parentChildData","rows","find","parentId","options","actionsColumnIndex","Box","Grid","item","xs","Component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a46ee116.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  CssBaseline,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  navlinks: {\n    marginLeft: theme.spacing(10),\n    display: \"flex\",\n  },\n  logo: {\n    flexGrow: \"1\",\n    cursor: \"pointer\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n    fontSize: \"20px\",\n    marginLeft: theme.spacing(20),\n    \"&:hover\": {\n      color: \"yellow\",\n      borderBottom: \"1px solid white\",\n    },\n  },\n}));\n\nfunction Navbar() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" top=\"0\">\n      <CssBaseline />\n      <Toolbar>\n        <Typography variant=\"h4\" className={classes.logo}>\n          Candidate list{\" \"}\n          {/* <img src={logo} alt=\"this is car image\" width={182} height={60}  /> */}\n        </Typography>{\" \"}\n        <div className={classes.navlinks}></div>{\" \"}\n      </Toolbar>{\" \"}\n    </AppBar>\n  );\n}\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport Navbar from \"./Navbar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport Stack from \"@mui/material/Stack\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport \"./App.css\";\n\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Add from \"@material-ui/icons/Add\";\nimport Check from \"@material-ui/icons/Check\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\n\nimport MaterialTable from \"material-table\";\n\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\n\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nclass App extends Component {\n  state = {\n    name: \"\",\n    testeeName: \"\",\n    testName: \"\",\n    attempts: 0,\n    score: 0,\n    sten: 0,\n    percentile: 0,\n    date_taken: \"\",\n    candidates: [],\n    loading: true,\n\n    //SearchBox\n    searchField: \"\",\n    // Test State var\n    testeeRecords: [],\n    fileName: \"\",\n\n    hoveringOver: \"\",\n  };\n\n  async componentDidMount() {\n    const url = \"https://reportgeneration.bradfields.co.zw/request\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ candidates: data, loading: false });\n  }\n  useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n  });\n\n  classes = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n  });\n\n  handleChange = ({ target: { value, name } }) =>\n    this.setState({\n      [name]: value,\n    });\n\n  async clickMe(row) {\n    var testeeRecords = [];\n\n    this.state.candidates.forEach((candidate) => {\n      if (candidate.candidate_id === row.candidate_id) {\n        testeeRecords.push(candidate);\n        console.log(candidate.candidate_id);\n      }\n    });\n\n    this.setState({ testeeRecords: testeeRecords }, function() {\n      this.createAndDownloadPdf();\n    });\n  }\n\n  createAndDownloadPdf = () => {\n    axios\n      .post(\"https://reportgeneration.bradfields.co.zw/create-pdf\", this.state.testeeRecords)\n      .then(() => axios.get(\"https://reportgeneration.bradfields.co.zw/fetch-pdf\", { responseType: \"blob\" }))\n      .then((res) => {\n        const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n        console.log(this.state.testeeRecords);\n        saveAs(pdfBlob);\n      });\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <Stack sx={{ color: \"grey.500\" }} spacing={2} direction=\"row\">\n            <CircularProgress color=\"secondary\" />\n            <CircularProgress color=\"success\" />\n            <CircularProgress color=\"inherit\" />\n          </Stack>{\" \"}\n        </div>\n      );\n    }\n    if (!this.state.candidates.length) {\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            left: \"37%\",\n            top: \"50%\",\n          }}\n        >\n          <Box sx={{ width: \"400%\" }}>\n            <Grid>\n              <Grid item xs={6}>\n                <Item> Didn 't Get Any Candidate! </Item>{\" \"}\n              </Grid>{\" \"}\n            </Grid>{\" \"}\n          </Box>{\" \"}\n        </div>\n      );\n    }\n    return (\n      <Router>\n        <div className=\"App ml-5 mr-5\" >\n          <Navbar fixed=\"top\" sticky=\"top\" />\n          <div stlye={{}}>\n            {/* <h4>NOTE THAT...</h4> */}\n            <Accordion style={{ width: 400 }}>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n              >\n                <Typography\n                  style={{\n                    fontWeight: 90,\n                    fontSize: \"20px\",\n                  }}\n                >\n                  Having Challenges?\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Typography  align=\"left\">If the downloading is slow: Sorry its probably due to slow network, wait a few seconds...</Typography>\n              </AccordionDetails>\n              <hr/>\n              <AccordionDetails>\n                <Typography align=\"left\">After Downloading: Please coonvert to word using the <a href=\"https://www.ilovepdf.com/pdf_to_word\">link</a></Typography>\n              </AccordionDetails>\n              <hr/>\n              <AccordionDetails >\n                <Typography align=\"left\">Change the text font-family while in Ms Word</Typography>\n              </AccordionDetails>\n            </Accordion>\n            <hr/>\n           \n         </div>\n          <MaterialTable\n            icons={{\n              Check: Check,\n              DetailPanel: ChevronRight,\n              Delete: DeleteOutline,\n              Export: SaveAlt,\n              Filter: FilterList,\n              FirstPage: FirstPage,\n              LastPage: LastPage,\n              NextPage: ChevronRight,\n              PreviousPage: ChevronLeft,\n              Search: Search,\n              ThirdStateCheck: Remove,\n              Add: Add,\n              SortArrow: ArrowDownward,\n              Clear: Clear,\n              Edit: Edit,\n              ViewColumn: ViewColumn,\n              ResetSearch: Clear,\n            }}\n            title=\"Psychometric Tests Candidates\"\n            columns={[\n              {\n                title: \"Candidate Id\",\n                field: \"candidate_id\",\n                width: \"15%\",\n                hover: true,\n              },\n              { title: \"Surname\", field: \"testeeName\" , width: \"20%\"},\n              { title: \"Test Name\", field: \"testName\", type: \"text\", width: \"20%\" },\n              { title: \"Attempts\", field: \"attempts\", type: \"numeric\", width: \"20%\" },\n              { title: \"Score\", field: \"score\", type: \"numeric\",  width: \"20%\" },\n              { title: \"Percentile\", field: \"percentile\", type: \"numeric\" , width: \"20%\" },\n              { title: \"Sten\", field: \"sten\", type: \"numeric\", width: \"20%\" },\n              { title: \"Date Taken\", field: \"date_taken\", type: \"date\", width: \"20%\" },\n              {\n                render: (rowData) => (\n                  <GetAppIcon\n                    tooltip=\"Download Report\"\n                    onClick={this.clickMe.bind(this, rowData)}\n                    id={\"col2-\" + rowData.candidate_id}\n                    key={\"col2-\" + rowData.candidate_id}\n                  />\n                ),\n              },\n            ]}\n            data={this.state.candidates}\n            parentChildData={(row, rows) =>\n              rows.find((a) => a.id === row.parentId)\n            }\n            //  actions={[\n            //   {\n            //     icon: {render: rowData => <GetAppIcon tooltip= 'Download Report'   onClick={this.clickMe.bind(this,rowData)} id={ 'col2-' + rowData.candidate_id } key={ 'col2-' + rowData.candidate_id }\n            //     />},\n            //     tooltip: 'Save User',\n            //     onClick: (event, rowData) => alert(\"You saved \" + rowData.name)\n            //   }\n            // ]}\n            options={{\n              actionsColumnIndex: -1,\n               \n            }}\n          />\n         \n        </div>{\" \"}\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}