{"version":3,"sources":["App.js","index.js"],"names":["App","state","name","testeeName","testName","attempts","score","sten","percentile","date_taken","candidates","loading","searchField","testeeRecords","fileName","useStyles","makeStyles","table","minWidth","classes","handleChange","_ref","_ref$target","target","value","_this","setState","Object","defineProperty","createAndDownloadPdf","axios","post","then","get","responseType","res","pdfBlob","Blob","data","type","saveAs","fetch","response","json","this","row","forEach","candidate","candidate_id","push","_this2","react_default","a","createElement","length","_this$state","filteredCandidates","filter","toLowerCase","includes","toLocaleLowerCase","className","Paper","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","key","component","scope","GetApp_default","onClick","clickMe","bind","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8653441e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport SearchBox from './SearchBox';\r\n\r\nimport \"./App.css\";\r\nimport MaterialTable from 'material-table';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    name: '',\r\n    testeeName: '',\r\n    testName: '',\r\n    attempts: 0,\r\n    score: 0,\r\n    sten: 0,\r\n    percentile: 0,\r\n    date_taken: '',\r\n    candidates:[],\r\n    loading: true,\r\n\r\n    //SearchBox\r\n    searchField: '',\r\n\r\n    // Test State var\r\n    testeeRecords:[],\r\n    fileName:''\r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://epz-report-generation.herokuapp.com/items\";\r\n    const response = await fetch(url);\r\n    const data =  await response.json();\r\n    this.setState({candidates: data, loading: false});\r\n  }\r\n\r\nuseStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650\r\n    }\r\n  });\r\n\r\n\r\n classes = makeStyles({\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n});\r\n\r\n  handleChange = ({ target: { value, name }}) => this.setState({ [name]: value })\r\n\r\n  async clickMe  (row){\r\n    var testeeRecords = [];\r\n    var allStens  = [];\r\n\r\n    this.state.candidates.forEach(candidate => {\r\n      if(candidate.candidate_id === row.candidate_id){\r\n        testeeRecords.push(candidate);\r\n       \r\n      }\r\n    });\r\n\r\n    // this.setState(row, function () {\r\n    //   this.createAndDownloadPdf();\r\n    // });\r\n    \r\n    this.setState({testeeRecords:testeeRecords}, function(){\r\n      this.createAndDownloadPdf();\r\n    })\r\n\r\n  }\r\n\r\n  createAndDownloadPdf = () => {\r\n    axios.post('/create-pdf', this.state.testeeRecords)\r\n      .then(() => axios.get('fetch-pdf', { responseType: 'blob' }))\r\n      .then((res) => {\r\n        const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n\r\n        \r\n        saveAs(pdfBlob, \"fileName.pdf\" );\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    if(this.state.loading) {\r\n      return <div>loading....</div>;\r\n    }\r\n    if(!this.state.candidates.length) {\r\n      return <div>Didn't get a candidate</div>\r\n    }\r\n    const {candidates, searchField} = this.state\r\n      const filteredCandidates = candidates.filter(candidate =>(\r\n        candidate.testeeName.toLowerCase().includes(searchField.toLocaleLowerCase())\r\n      ))\r\n      this.candidates = {filteredCandidates};\r\n    return (\r\n      \r\n      <div className=\"App\">\r\n\r\n        <h1>Candidate list</h1>\r\n                  <Paper>\r\n                   <TableContainer>\r\n                     <Table >\r\n                       <TableHead>\r\n                         <TableRow>\r\n                           <TableCell align=\"center\">Candidate ID</TableCell>\r\n                           <TableCell align=\"center\">Testee Name</TableCell>\r\n                           <TableCell align=\"center\">Test Name</TableCell>\r\n                           <TableCell align=\"center\">Attempts</TableCell>\r\n                           <TableCell align=\"center\">Score</TableCell>\r\n                           <TableCell align=\"center\">Percentile   </TableCell>\r\n                           <TableCell align=\"center\">Sten</TableCell>\r\n                           <TableCell align=\"center\">Date Taken</TableCell>\r\n                         </TableRow>\r\n                       </TableHead>\r\n                       <TableBody >\r\n                         \r\n                         {this.state.candidates.map((row) => (\r\n                           <TableRow key={row.candidate_id}>\r\n                             <TableCell align=\"center\" component=\"th\" scope=\"row\">{row.candidate_id} </TableCell>\r\n                             <TableCell align=\"center\">{row.testeeName}</TableCell>\r\n                             <TableCell align=\"center\">{row.testName}</TableCell>\r\n                             <TableCell align=\"center\">{row.attempts}</TableCell>\r\n                             <TableCell align=\"center\">{row.score}</TableCell>\r\n                             <TableCell align=\"center\">{row.percentile}</TableCell>\r\n                             <TableCell align=\"center\">{row.sten}</TableCell>\r\n                             <TableCell align=\"center\">{row.date_taken}</TableCell>\r\n                             <GetAppIcon onClick={this.clickMe.bind(this,row)}/>\r\n                             {/* <button onClick={this.clickMe.bind(this,row)}>Download PDF</button> */}\r\n                           </TableRow>\r\n                         ))}\r\n                       </TableBody>\r\n                     </Table>\r\n                   </TableContainer>\r\n                   \r\n                 </Paper>     \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}